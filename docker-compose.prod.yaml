services:
  backend:
    env_file:
      - .env.prod

  sql-dev:
    image: mysql:8.0
    container_name: sql-dev
    env_file:
      - .env      
    ports:
      - "3307:3306"
    volumes:
      - ./sql_data_dev:/var/lib/mysql

  sql-prod:
    image: mysql:8.0
    container_name: sql-prod
    env_file:
      - .env.prod
    ports:
      - "3306:3306"
    volumes:
      - ./sql_data_prod:/var/lib/mysql


  web:
    build:
      dockerfile: webProd.Dockerfile
    container_name: web-prod
    ports:
      - "3300"
    volumes: []
    command: []


  reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-reverse-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - ./certbot-www:/var/www/certbot # this is for the cert bot to do the challenge 
    depends_on:
      - web
    restart: unless-stopped


  certbot:
    image: certbot/certbot
    container_name: certbot 
    profiles: ["ssl"]
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot-www:/var/www/certbot
    depends_on:
      - reverse-proxy 
    entrypoint:
      - sh
      - -c
      - |
        certbot certonly \
          --webroot -w /var/www/certbot \
          --email cheahzhengfeng@gmail.com \
          --agree-tos --no-eff-email \
          --rsa-key-size 4096 \
          --expand \
          --renew \
          -d connectitweb.site -d www.connectitweb.site