services:
  backend:
    env_file:
      - .env.prod

  sql-dev:
    image: mysql:8.0
    container_name: sql-dev
    env_file:
      - .env   
    ports:
      - "3307:3306"
    volumes:
      - ./sql_data_dev:/var/lib/mysql

  sql-prod:
    image: mysql:8.0
    container_name: sql-prod
    env_file:
      - .env.prod
    ports:
      - "3306:3306"
    volumes:
      - ./sql_data_prod:/var/lib/mysql


  web:
    build:
      context: ./web
      dockerfile: webProd.Dockerfile
      args:
        VITE_HCAPTCHA_SITEKEY: ${VITE_HCAPTCHA_SITEKEY}
    container_name: web-prod
    expose:
      - "3300"
    env_file:
      - .env
    volumes: []
    command: []
    restart: unless-stopped


  reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-startup.sh:/nginx-startup.sh
      #- ./nginx-reverse-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl  # Mount entire ssl directory
      - ./certbot-www:/var/www/certbot # this is for the cert bot to do the challenge 
    depends_on:
      - web
    restart: unless-stopped
    command : ["/bin/sh", "/nginx-startup.sh"]



  certbot:
    image: certbot/certbot
    container_name: certbot
    profiles: ["ssl"]
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot-www:/var/www/certbot
    entrypoint:
      - sh
      - -c
      - |
        certbot certonly \
          --webroot -w /var/www/certbot \
          --email cheahzhengfeng@gmail.com \
          --agree-tos --no-eff-email \
          --rsa-key-size 4096 \
          --expand \
          --force-renewal \
          -d connectitweb.site -d www.connectitweb.site 






  # # ───────────── Dynamic Nginx reverse-proxy ─────────────
  # nginx-proxy:
  #   image: jwilder/nginx-proxy:latest
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./ssl:/etc/nginx/certs       # certs live here
  #     - ./certbot-www:/usr/share/nginx/html  # for ACME http-01
  #     - ./vhost.d:/etc/nginx/vhost.d:ro     # ← add this
  #   restart: unless-stopped  # Add this line

  # # ──────────── Let’s Encrypt companion ────────────
  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion:latest
  #   container_name: letsencrypt
  #   depends_on:
  #     - nginx-proxy
  #   environment: 
  #     - NGINX_PROXY_CONTAINER=nginx-proxy     # ← tell it which container to inspect
  #     - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy  # Add this
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./ssl:/etc/nginx/certs
  #     - ./certbot-www:/usr/share/nginx/html
  #     - ./vhost.d:/etc/nginx/vhost.d:rw     # ← add this
  #   restart: unless-stopped  # Add this line
